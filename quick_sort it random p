import random
def partition(A, p, r):
    x = A[r]
    i = (p - 1)

    for j in range(p, r):
        if A[j] <= x:
            i += 1
            A[i], A[j] = A[j], A[i]

    i += 1
    A[i], A[r] = A[r], A[i]
    return (i)

def random_partition(A, p, r):

    i = random.randint(p, r)

    A[i], A[r] = A[r], A[i]
    return partition(A, p, r)

def quickSortIterative(A, p, r):

    size = r - p + 1
    stack = [0] * (size)
    top = 0
    stack[top] = p
    top += 1
    stack[top] = r

    while top >= 0:

        r = stack[top]
        top -= 1
        p = stack[top]
        top -= 1

        q = random_partition(A, p, r)

        if q - 1 > p:
            top += 1
            stack[top] = p
            top += 1
            stack[top] = q - 1

        if q + 1 < r:
            top += 1
            stack[top] = q + 1
            top += 1
            stack[top] = r


def quicksort(A):
    quickSortIterative(A, 0, len(A) - 1)

A = [10, 9, 2134, 43, 54, 4]

quicksort(A)
print(A)
